#!/usr/bin/Rscript
library(ggplot2)
library(ggthemes)
library(Hmisc)
basefspath = Sys.getenv("BASEFSPATH")
exclude = c(
    "bw-256kbit", 
    "bw-32kbit-htb1", 
    'bw-64kbit-htb1',
    'bw-56kbit',
    'bw-512kbit',
    'bw-1mbit',
    'delay-20ms',
    'delay-300ms',
    'delay-400ms',
    'delay-600ms',
    'delay-2000',
    'delay-2500',
    'delay-3000'
)
do_graphs <- function (dataset, dataset_completed, var, name) {
    current <- dataset[grepl(var, dataset$scenario) | dataset$scenario=="baseline",]
    current = current[! current$scenario %in% exclude,]
    numbers = sort(as.numeric(levels(current$round)))
    current$Color = ordered(current$round, levels=c(numbers, "baseline"))
#    current$scenario[current$scenario == "delay-100ms"] <- '1000'
    plt = ggplot(data=current, aes(x=size, y=time, color=Color)) +
        geom_point(alpha=0.5) +
        stat_summary(fun.data="mean_cl_boot", size=1, alpha=0.5) +
        scale_x_log10() +
        scale_y_log10() +
        ggtitle(paste0(name, " - ", "convergence time under variable ", var)) +
        labs(y="Time in seconds", x="Log entries", colour="Delay")
    
    ggsave(paste0(basefspath, "/eval/plots/", name, "-", var, ".png"), dpi=600)
    print(paste0("eog ", basefspath, "/eval/plots/", name, "-", var, ".png"))
    
    return(plt)
}
gossip = read.csv(paste0(basefspath, "/eval/datasets/gossip.csv"))
gossip_completed = read.csv(paste0(basefspath, "/eval/datasets/gossip-completed.csv"))
basefs = read.csv(paste0(basefspath, "/eval/datasets/basefs.csv"))
basefs_completed = read.csv(paste0(basefspath, "/eval/datasets/basefs-completed.csv"))
q()
